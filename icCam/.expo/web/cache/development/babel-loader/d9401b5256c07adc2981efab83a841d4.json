{"ast":null,"code":"import { useMemo } from 'react';\nimport { sortFormats } from \"../utils/FormatFilter\";\nexport function useCameraFormat(device) {\n  return useMemo(function () {\n    return device === null || device === void 0 ? void 0 : device.formats.sort(sortFormats)[0];\n  }, [device === null || device === void 0 ? void 0 : device.formats]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,WAAT;AAWA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAgF;EACrF,OAAOH,OAAO,CAAC;IAAA,OAAMG,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEC,OAAR,CAAgBC,IAAhB,CAAqBJ,WAArB,EAAkC,CAAlC,CAAP;EAAA,GAA6C,CAACE,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAA7C,CAAd;AACD","names":["useMemo","sortFormats","useCameraFormat","device","formats","sort"],"sources":["useCameraFormat.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';\nimport { sortFormats } from '../utils/FormatFilter';\n\n/**\n * Returns the best format for the given camera device.\n *\n * This function tries to choose a format with the highest possible photo-capture resolution and best matching aspect ratio.\n *\n * @param {CameraDevice} device The Camera Device\n *\n * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.\n */\nexport function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined {\n  return useMemo(() => device?.formats.sort(sortFormats)[0], [device?.formats]);\n}\n"]},"metadata":{},"sourceType":"module"}