{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createUserWithEmailAndPassword, sendSignInLinkToEmail, fetchSignInMethodsForEmail, EmailAuthProvider } from \"firebase/auth\";\nimport React, { useRef, useState } from 'react';\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Signup = function Signup() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordAuthentication = _useState6[0],\n    setPasswordAuthentication = _useState6[1];\n  var actionCodeSettings = {\n    url: 'https://www.example.com/finishSignUp?cartId=1234',\n    handleCodeInApp: true,\n    iOS: {\n      bundleId: 'com.example.ios'\n    },\n    android: {\n      packageName: 'com.example.android',\n      installApp: true,\n      minimumVersion: '12'\n    },\n    dynamicLinkDomain: 'example.page.link'\n  };\n  CreateUser = function () {\n    var _ref = _asyncToGenerator(function* (email, password, passwordAuthentication) {\n      if (password === passwordAuthentication) {\n        try {\n          yield createUserWithEmailAndPassword(auth, email, password);\n          yield sendSignInLinkToEmail(auth, email);\n        } catch (error) {\n          alert(error);\n        }\n      } else {\n        alert(\"Password verification does not match\");\n      }\n    });\n    return function CreateUser(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.a,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Signup\"\n      }), _jsx(TextInput, {\n        style: styles.box,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      }), _jsx(TextInput, {\n        style: styles.box,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        secureTextEntry: true\n      }), _jsx(TextInput, {\n        style: styles.box,\n        placeholder: \"Password Authentication\",\n        onChangeText: function onChangeText(passwordAuthentication) {\n          return setPasswordAuthentication(passwordAuthentication);\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return CreateUser(email, password, passwordAuthentication);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Signup\"\n        })\n      })]\n    })\n  });\n};\nexport default Signup;\nvar styles = StyleSheet.create({\n  a: {\n    backgroundColor: \"#5f9ea0\",\n    padding: 2,\n    margin: 30,\n    height: '70%'\n  },\n  box: {\n    backgroundColor: \"#7fffd4\",\n    fontSize: 20,\n    borderWidth: 2,\n    margin: 10,\n    padding: 1,\n    paddingLeft: 3\n  },\n  button: {\n    borderWidth: 2,\n    alignSelf: 'center',\n    width: '40%',\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 50,\n    backgroundColor: 'oldlace',\n    marginHorizontal: '1%',\n    marginBottom: 6,\n    minWidth: '48%',\n    textAlign: 'center',\n    justifyContent: 'center',\n    backgroundColor: \"#daa520\"\n  },\n  buttonText: {\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n    fontSize: 25\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"names":["createUserWithEmailAndPassword","sendSignInLinkToEmail","fetchSignInMethodsForEmail","EmailAuthProvider","React","useRef","useState","auth","Signup","email","setEmail","password","setPassword","passwordAuthentication","setPasswordAuthentication","actionCodeSettings","url","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","dynamicLinkDomain","CreateUser","error","alert","styles","a","title","box","button","buttonText","StyleSheet","create","backgroundColor","padding","margin","height","fontSize","borderWidth","paddingLeft","alignSelf","width","paddingHorizontal","paddingVertical","borderRadius","marginHorizontal","marginBottom","minWidth","textAlign","justifyContent","fontWeight"],"sources":["C:/Users/Chen Moskovitz/Desktop/the best final project ever/final-project/iccam/pages/Signup/Signup.js"],"sourcesContent":["import { StyleSheet, Text, View, TextInput ,TouchableOpacity} from 'react-native'\r\nimport { createUserWithEmailAndPassword, sendSignInLinkToEmail,fetchSignInMethodsForEmail,EmailAuthProvider} from \"firebase/auth\";\r\nimport React , {useRef, useState} from 'react'\r\nimport { auth } from '../../firebase'\r\n\r\n\r\n\r\nconst Signup = () => {\r\n  const[email, setEmail] = useState('');\r\n  const[password, setPassword] = useState(''); \r\n  const[passwordAuthentication, setPasswordAuthentication] = useState(''); \r\n\r\n  const actionCodeSettings = {\r\n    // URL you want to redirect back to. The domain (www.example.com) for this\r\n    // URL must be in the authorized domains list in the Firebase Console.\r\n    url: 'https://www.example.com/finishSignUp?cartId=1234',\r\n    // This must be true.\r\n    handleCodeInApp: true,\r\n    iOS: {\r\n      bundleId: 'com.example.ios'\r\n    },\r\n    android: {\r\n      packageName: 'com.example.android',\r\n      installApp: true,\r\n      minimumVersion: '12'\r\n    },\r\n    dynamicLinkDomain: 'example.page.link'\r\n  };\r\n  \r\n  // const auth = getAuth();\r\n  // sendSignInLinkToEmail(auth, email, actionCodeSettings)\r\n  //   .then(() => {\r\n  //     // The link was successfully sent. Inform the user.\r\n  //     // Save the email locally so you don't need to ask the user for it again\r\n  //     // if they open the link on the same device.\r\n  //     window.localStorage.setItem('emailForSignIn', email);\r\n  //     // ...\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     const errorCode = error.code;\r\n  //     const errorMessage = error.message;\r\n  //     // ...\r\n  //   });\r\n    \r\n    \r\n  CreateUser = async(email, password, passwordAuthentication) => {\r\n    if(password === passwordAuthentication){\r\n      try{\r\n        await createUserWithEmailAndPassword(auth, email, password)\r\n        await sendSignInLinkToEmail(auth, email)\r\n    } catch(error){\r\n        alert(error)\r\n    }\r\n    }\r\n    else{\r\n      alert(\"Password verification does not match\")\r\n    }\r\n \r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <View style = {styles.a}>\r\n        <Text style = {styles.title}>Signup</Text>\r\n        <TextInput\r\n                  style = {styles.box}\r\n                  placeholder=\"Email\"\r\n                  // ref={email}\r\n                  onChangeText={(email) => setEmail(email)}\r\n                  autoCapitalize=\"none\"\r\n                  autoCorrect = {false}\r\n                  />\r\n        <TextInput\r\n                  style = {styles.box}\r\n                  placeholder=\"Password\"\r\n                  // ref={password}\r\n                  onChangeText={(password) => setPassword(password)}\r\n                  autoCapitalize=\"none\"\r\n                  autoCorrect = {false}\r\n                  secureTextEntry={true}\r\n                  />\r\n        <TextInput\r\n                  style = {styles.box}\r\n                  placeholder=\"Password Authentication\"\r\n                  // ref={password}\r\n                  onChangeText={(passwordAuthentication) => setPasswordAuthentication(passwordAuthentication)}\r\n                  autoCapitalize=\"none\"\r\n                  autoCorrect = {false}\r\n                  secureTextEntry={true}\r\n                  />\r\n        {/* <TouchableOpacity\r\n                style = {styles.button}\r\n                onPress={() => sendSignInLinkToEmail(email,actionCodeSettings)}>\r\n                  <Text style = {styles.buttonText}>Signup</Text>\r\n        </TouchableOpacity> */}\r\n        <TouchableOpacity\r\n                style = {styles.button}\r\n                onPress={() => CreateUser(email, password, passwordAuthentication)}>\r\n                <Text style = {styles.buttonText}>Signup</Text>\r\n        </TouchableOpacity>\r\n                \r\n      \r\n            </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n\r\nconst styles = StyleSheet.create({\r\n  a: {\r\n    backgroundColor: `#5f9ea0`,\r\n    padding: 2,\r\n    margin:30,\r\n    height: '70%'\r\n  },\r\n  box: {\r\n    backgroundColor: `#7fffd4`,\r\n    fontSize: 20,\r\n    borderWidth: 2,\r\n    margin: 10,\r\n    padding: 1,\r\n    paddingLeft: 3,\r\n},\r\nbutton: {\r\n    borderWidth: 2,\r\n    alignSelf: 'center',\r\n    width: '40%',\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 50,\r\n    backgroundColor: 'oldlace',\r\n    marginHorizontal: '1%',\r\n    marginBottom: 6,\r\n    minWidth: '48%',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: `#daa520`,\r\n  },\r\n  buttonText: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 25,\r\n  },\r\n  title: {\r\n    //fontSize: 10,\r\n    fontWeight: 'bold',\r\n    fontSize: 20,\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}